{"ast":null,"code":"var _jsxFileName = \"/home/qwerty/Documents/react/todo-list/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TodoTask from \"./components/TodoTask/TodoTask\";\nimport \"./styles/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [task, setTask] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n\n  function addTask() {\n    const idRandom = num => Math.floor(Math.random() * num);\n\n    console.log(idRandom(10));\n    const newTask = {\n      id: idRandom(9999999999999999999),\n      nameTask: task\n    };\n    setTodoList([...todoList, newTask]); //armazena as novas task ecom as antigas\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Lists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"Escrever task...\",\n        name: \"task\",\n        className: \"input\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-header\",\n        onClick: addTask,\n        children: \"Adicionar Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), console.log(task), /*#__PURE__*/_jsxDEV(TodoTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), todoList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [task.nameTask, task.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hmSeMWaa0gH39ELY2VX9rg/nwfI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/qwerty/Documents/react/todo-list/src/App.tsx"],"names":["useState","TodoTask","App","task","setTask","todoList","setTodoList","addTask","idRandom","num","Math","floor","random","console","log","newTask","id","nameTask","e","target","value","map"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,OAAO,qBAAP;;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAU,EAAV,CAAxC;;AAEA,WAASO,OAAT,GAAmB;AACjB,UAAMC,QAAQ,GAAIC,GAAD,IAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAlC;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAAC,EAAD,CAApB;AAEH,UAAMO,OAAO,GAAC;AAACC,MAAAA,EAAE,EAACR,QAAQ,CAAC,mBAAD,CAAZ;AAAkCS,MAAAA,QAAQ,EAACd;AAA3C,KAAd;AACAG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaU,OAAb,CAAD,CAAX,CANoB,CAMc;AAChC;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,YAAY,EAAC,KAFf;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,SAAS,EAAC,OALZ;AAME,QAAA,KAAK,EAAEZ,IANT;AAOE,QAAA,QAAQ,EAAGe,CAAD,IAAOd,OAAO,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV;AAP1B;AAAA;AAAA;AAAA;AAAA,cAHF,eAaE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAEb,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAnBF,EAoBGM,OAAO,CAACC,GAAR,CAAYX,IAAZ,CApBH,eAsBE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAtBF,EAyBAE,QAAQ,CAACgB,GAAT,CAAalB,IAAI,iBAChB;AAAA,iBACEA,IAAI,CAACc,QADP,EAEEd,IAAI,CAACa,EAFP;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAjDQd,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport TodoTask from \"./components/TodoTask/TodoTask\";\n\nimport \"./styles/styles.css\";\n\ninterface ITask {\n  id: number;\n  nameTask: String;\n}\n\nfunction App() {\n  const [task, setTask] = useState(\"\");\n\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  function addTask() {\n    const idRandom = (num: number) => Math.floor(Math.random() * num);\n\n    console.log(idRandom(10));\n\n\tconst newTask={id:idRandom(9999999999999999999),nameTask:task}\n\tsetTodoList([...todoList,newTask])//armazena as novas task ecom as antigas\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h2>Lists</h2>\n\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Escrever task...\"\n          name=\"task\"\n          className=\"input\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n        />\n\n        <button type=\"submit\" className=\"btn-header\" onClick={addTask}>\n          Adicionar Task\n        </button>\n      </header>\n\n      <div className=\"line\"></div>\n      {console.log(task)}\n\n      <TodoTask />\n\n\t  {\n\t\t  todoList.map(task=>(\n\t\t\t  <div>\n\t\t\t\t  {task.nameTask}\n\t\t\t\t  {task.id}\n\t\t\t  </div>\n\t\t  ))\n\t  }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}